---
import SectionContainer from "./SectionContainer.astro";
import ExperienceIcon from '../icons/ExperienceIcon.astro';
import LanguageIcon from '../icons/LanguageIcon.astro';
import AngularIcon from '../icons/AngularIcon.astro';
import BuildingsIcon from '../icons/BuildingsIcon.astro';
import StatisticsIcon from '../icons/StatisticsIcon.astro';
import TailwindIcon from '../icons/TailwindIcon.astro';
import TypeScriptIcon from '../icons/TypeScriptIcon.astro';
import ShoppingCartIcon from '../icons/ShoppingCartIcon.astro';
import BallSoccerIcon from '../icons/BallSoccerIcon.astro';
import ReactIcon from '../icons/ReactIcon.astro';
import PHPIcon from '../icons/PHPIcon.astro';
import ClinicaIcon from '../icons/ClinicaIcon.astro';
import GymIcon from '../icons/GymIcon.astro';
import Title from "./Shared/Title.astro";

interface experiencesProps {
  year?:  number ;
  icon: string;
  title: string;
  description: string;
  link?: string;
}

const experiences: experiencesProps[] = [
  {
    year: 2024,
    icon: 'AngularIcon',
    title: 'Hoy',
    description: 'Actualmente aprendiendo la nueva versión de Angular 17 realizando proyectos.',
  },
  {
    icon: 'StatisticsIcon',
    title: 'Página',
    description: 'Rediseñé con Astro una página creada hace más de 30 años sobre mi ciudad Valle de Santiago.',
    link: 'https://valledesantiago.vercel.app/'
  },
  {
    icon: 'ClinicaIcon',
    title: 'Página',
    description: 'Creé una página con Astro para registrar citas y dar a conocer una clínica de fisíoterapia.',
    link: 'https://agenda-fisioterapia.vercel.app/'
  },
  {
    year: 2023,
    icon: 'LanguageIcon',
    title: 'Aprendiendo tecnologías',
    description: 'Practicando y aprendiendo Astro haciendo proyectos y mejorando mi conversación en inglés.',
  },
  {
    icon: 'BuildingsIcon',
    title: 'Proyecto',
    description: 'Creé un proyecto con Next.js sobre una inmobiliaria aprendiendo nuevas librerías como Leaflet o Framer Motion.',
    link: 'https://as-bienes-raices.vercel.app/'
  },
  {
    icon: 'TailwindIcon',
    title: 'Desafíos',
    description: 'Terminé más de 10 desafíos de la página Frontend Mentor aprendiendo nuevas tecnologías como Tailwind o Next.js.',
    link: 'https://www.frontendmentor.io'
  },
  {
    icon: 'ShoppingCartIcon',
    title: 'Proyecto',
    description: 'Creé un e-commerce aprendiendo nuevas tecnologías como Clerk, MySQL y Stripe, creando un panel de administrador para gestionar las ventas.',
    link: 'https://as-ecommerce-food.vercel.app/'
  },
  {
    icon: 'ExperienceIcon',
    title: 'Bootcamp',
    description: 'Entré al bootcampo de Henry, realizando varios proyectos full-stack de forma individual y en equipo.',
    link: 'https://www.talent.soyhenry.com/candidate/11914'
  },
  { 
    year: 2022,
    icon: 'TypeScriptIcon',
    title: 'Aprendiendo tecnologías',
    description: 'Practicando y aprendiendo TypeScript, Next.js, Tailwind y PostgreSQL creando diversos proyectos.',
  },
  {
    icon: 'GymIcon',
    title: 'Proyecto',
    description: 'Creé una landing para un gimnasio perfeccionando mi HTML, CSS y JavaScript.',
    link: 'https://gym-as.vercel.app/'
  },
  {
    icon: 'BallSoccerIcon',
    title: 'Proyecto',
    description: 'Creé un blog aprendiendo tecnologías como Auth0 y Express, enfocado en noticias sobre mi equipo favorito, el FC Barcelona.',
    link: 'https://blog-barcelona.vercel.app/'
  },
  {
    year: 2021,
    icon: 'ReactIcon',
    title: 'Aprendiendo tecnologías',
    description: 'Practicando y aprendiendo JavaScript, React, Redux y Node.js creando diversos proyectos.',
  },
  {
    year: 2020,
    icon: 'PHPIcon',
    title: 'Primer proyecto',
    description: 'Creación de una página interna en PHP para gestionar la base de datos de beneficiarios de un programa gubernamental.'
  },
  {
    year: 2015,
    icon: 'ExperienceIcon',
    title: 'Primer trabajo',
    description: 'Conseguí mi primer trabajo, en el gobierno como técnico, realizando mantenimiento de hardware y software en PC e impresoras.'
  },
];
---

<SectionContainer>
  <div id="experiencia" class="flex justify-center lg:justify-start items-center gap-x-2 mb-8 pt-12 mt-16">
    <div><ExperienceIcon class="dark:text-grayStrong text-gray size-9" /></div>
    <Title className="text-4xl" title="Experiencia" />
  </div>
  <header id="experienciaContenedor" class="flex min-h-[380px] overflow-x-auto overflow-y-hidden">    
    {experiences.map(({ year, icon, title, description, link }) => (
      <article class="flex flex-col max-h-[50px] experience-article">
        <div class="flex flex-col justify-center items-center relative">
          <span class="dark:text-grayStrong text-gray absolute top-0 -left-4 experience-year">{year}</span>
          <div class="flex mt-8 relative">
            <aside class="flex h-12 w-[2.5px] bg-gray mr-28 vertical-line
            dark:bg-grayStrong dark:text-grayStrong text-gray text-sm">
              <div class="absolute -top-1 left-0 flex justify-start items-start gap-x-2 separator">
                <span class="opacity-0">|</span>
                <span>|</span>
                <span>|</span>
                <span>|</span>
                <span>|</span>
                <span>|</span>
                <span>|</span>
                <span>|</span>
                <span>|</span>
                <span>|</span>
              </div>
            </aside>
          </div>
          <div class="dark:text-grayStrong text-gray absolute -bottom-8 -left-[10px] experience-icon mt-2">
            {icon === 'AngularIcon' 
              ? <AngularIcon class="size-6" /> 
              : icon === 'BuildingsIcon'
                ? <BuildingsIcon class="size-6" />
                : icon === 'StatisticsIcon'
                  ? <StatisticsIcon class="size-6" />
                  : icon === 'TailwindIcon'
                    ? <TailwindIcon class="size-6" />
                    : icon === 'TypeScriptIcon'
                      ? <TypeScriptIcon class="size-6" />
                      : icon === 'ShoppingCartIcon'
                        ? <ShoppingCartIcon class="size-6" />
                        : icon === 'ExperienceIcon'
                          ? <ExperienceIcon class="size-6" />
                          : icon === 'BallSoccerIcon'
                            ? <BallSoccerIcon class="size-6" />
                            : icon === 'ReactIcon'
                              ? <ReactIcon class="size-6" />
                              : icon === 'LanguageIcon'
                                ? <LanguageIcon class="size-6" />
                                : icon === 'ClinicaIcon'
                                  ? <ClinicaIcon class="size-6" />
                                  : icon === 'GymIcon'
                                    ? <GymIcon class="size-6" />
                                    : icon === 'PHPIcon'
                                      ? <PHPIcon class="size-6" />
                                      : null
            }
          </div>
          <footer class="absolute flex justify-center items-center flex-col mt-[390px] min-w-[340px]">
            <h2 class="relative dark:text-primary text-fifth font-medium text-xl experience-title hidden">{title}</h2>
            <p class="text-grayStrong leading-[1.5rem] experience-description hidden text-sm">{description}</p>
            {link && 
            <a href={link} target="_blank" rel="noopener" 
            class="hidden experience-button text-purple-700 lg:hover:text-white 
            border border-purple-700 lg:hover:bg-gradient-to-r from-purple-500 via-purple-600 
            to-purple-700 font-medium rounded-lg text-sm px-3 py-1.5 text-center me-2 mb-2 
            dark:border-purple-400 dark:text-purple-400 lg:dark:hover:text-white transition mt-2">
              Ver más
            </a>}
          </footer>
        </div>
      </article>
    ))}
  </header>
</SectionContainer>

<script>
  const articleExperiences = document.querySelectorAll('.experience-article');
  const experiencesContainer = document.getElementById('experienciaContenedor');
  let activeExperience: any = null;

  if (experiencesContainer) setActiveExperience(experiencesContainer.firstElementChild);
      
  function setActiveExperience(experience: any) {
    if (activeExperience) {
      activeExperience.classList.remove('active');
    }

    experience.classList.add('active');
    activeExperience = experience;
  }

  articleExperiences.forEach((article) => {
    article.addEventListener('mouseover', () => {
      setActiveExperience(article);
    });
  });
</script>

<style>
  .experience-article.active .vertical-line {
    height: 100px;
    background-color: #8C2DE0;
    transition: height .3s ease-in-out;
  }

  body.dark .experience-article.active .vertical-line {
    height: 100px;
    background-color: #00abf0;
    transition: height .3s ease-in-out;
  }

  body.dark .experience-article.active .experience-year,
  body.dark .experience-article.active .experience-icon {
    color: white;
  }

  .experience-article.active .experience-year,
  .experience-article.active .experience-icon {
    color: #141e33;
  }

  .experience-article.active .experience-button,
  .experience-article.active .experience-title,
  .experience-article.active .experience-description {
    display: block;
    margin-right: 6rem;
  }

  .experience-article:first-child .experience-title {
    margin-right: 70px;
  }

  .experience-article:first-child .experience-icon {
    left: 0px;
  }

  .experience-article:first-child .separator,
  .experience-article:first-child .vertical-line {
    margin-left: 10px;
  }

  .experience-article:first-child .experience-year {
    left: 0;
  }

  .experience-article:first-child .experience-description {
    margin-left: 290px;
    text-align: left;
    min-width: 300px;
  }

  .experience-article:last-child .separator {
    display: none;
  }
</style>